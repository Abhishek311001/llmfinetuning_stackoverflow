{"timestamp":"2025-07-27T18:25:12.493090","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-27T18:25:12.494004","level":"info","event":"Filling up the DagBag from /home/azureuser/cloudfiles/code/users/abhishekbatti2001/llmfinetuning_stackoverflow/airflow_home/dags/preprocessing_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-27T18:25:12.549462Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:25:12.549638Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:25:12.549891Z","level":"info","event":"Current task name:run_preprocessing","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:25:12.550012Z","level":"info","event":"Dag name:stackoverflow_data_preprocessing","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:25:13.728477Z","level":"error","event":"SLF4J: Class path contains multiple SLF4J bindings.","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-27T18:25:13.728718Z","level":"error","event":"SLF4J: Found binding in [jar:file:/anaconda/envs/azureml_py38/lib/python3.10/site-packages/pyspark/jars/log4j-slf4j-impl-2.17.1.jar!/org/slf4j/impl/StaticLoggerBinder.class]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-27T18:25:13.728821Z","level":"error","event":"SLF4J: Found binding in [jar:file:/anaconda/envs/azureml_py38/lib/python3.10/site-packages/pyspark/jars/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-27T18:25:13.728925Z","level":"error","event":"SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-27T18:25:13.729001Z","level":"error","event":"SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-27T18:25:14.439534Z","level":"error","event":"WARNING: An illegal reflective access operation has occurred","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-27T18:25:14.439755Z","level":"error","event":"WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/anaconda/envs/azureml_py38/lib/python3.10/site-packages/pyspark/jars/spark-unsafe_2.12-3.1.2.jar) to constructor java.nio.DirectByteBuffer(long,int)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-27T18:25:14.439883Z","level":"error","event":"WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-27T18:25:14.439980Z","level":"error","event":"WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-27T18:25:14.440094Z","level":"error","event":"WARNING: All illegal access operations will be denied in a future release","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-27T18:26:22.636445Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:22.636632Z","level":"info","event":"To track the changes with git, run:","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:22.636695Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:22.636750Z","level":"info","event":"\tgit add data/preprocessed/preprocessed_data.parquet.dvc","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:22.636919Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:22.636990Z","level":"info","event":"To enable auto staging, run:","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:22.637041Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:22.637090Z","level":"info","event":"\tdvc config core.autostage true","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:24.685081Z","level":"info","event":"[main 9675b0f] Add processed stackoverflow data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:24.685260Z","level":"info","event":" 1 file changed, 1 insertion(+), 1 deletion(-)","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:41.255802Z","level":"info","event":"21 files pushed","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:41.630830","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-27T18:26:41.662037Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:41.662213Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:41.664228Z","level":"info","event":"Task operator:<Task(PythonOperator): run_preprocessing>","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-27T18:26:42.112886Z","level":"error","event":"\r[Stage 0:>                                                                                                    (0 + 4) / 10]\r\r[Stage 0:==============================>                                                                      (3 + 4) / 10]\r\r[Stage 0:========================================>                                                            (4 + 4) / 10]\r\r[Stage 0:============================================================>                                        (6 + 4) / 10]\r\r[Stage 0:======================================================================>                              (7 + 3) / 10]\r\r[Stage 0:================================================================================>                    (8 + 2) / 10]\r\r[Stage 0:==========================================================================================>          (9 + 1) / 10]\r\r                                                                                                                           \r\r[Stage 1:>                                                                                                    (0 + 4) / 10]\r\r[Stage 1:========================================>                                                            (4 + 4) / 10]\r\r[Stage 1:==================================================>                                                  (5 + 4) / 10]\r\r[Stage 1:============================================================>                                        (6 + 4) / 10]\r\r[Stage 1:================================================================================>                    (8 + 2) / 10]\r\r[Stage 1:==========================================================================================>          (9 + 1) / 10]","chan":"stderr","logger":"task"}
